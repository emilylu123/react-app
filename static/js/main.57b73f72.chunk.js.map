{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","star","name","gender","CardList","stars","map","index","SearchBox","placeholder","handleChange","type","onChange","App","handleSearch","e","setState","searchField","target","value","state","Header","starWars","console","log","fetch","then","response","json","res","results","this","filteredStar","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAgBeA,MAbf,SAAcC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,WACJC,IAAG,+BAA0BH,EAAMI,GAAhC,4BAEL,6BAAKJ,EAAMK,KAAKC,OAChB,6BAAKN,EAAMK,KAAKE,WANmBP,EAAMK,KAAKC,OCDvCE,G,MAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,MAAMC,KAAI,SAACL,EAAMM,GAAP,OACf,cAAC,EAAD,CAAkBP,GAAIO,EAAON,KAAMA,GAAxBM,U,MCOFC,MAXf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,KC6CDG,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAuBFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAvBtC,EAAKC,MAAQ,CACXC,OAAQ,iBACRC,SAAU,GACVL,YAAa,IALH,E,qDAWd,WAAqB,IAAD,OAClBM,QAAQC,IAAI,qBACZC,MAAM,iCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAI,EAAKb,SAAS,CAAEM,SAAUO,EAAIC,e,gCAG/C,WACEP,QAAQC,IAAI,sBACZD,QAAQC,IAAIO,KAAKX,MAAME,Y,oBAQzB,WAAU,IAAD,EAC2BS,KAAKX,MAA/BE,EADD,EACCA,SAAUL,EADX,EACWA,YACZe,EAAeV,EAASW,QAAO,SAAAhC,GACnC,OAAOA,EAAKC,KAAKgC,cAAcC,SAASlB,EAAYiB,kBAGtD,OACE,sBAAKrC,UAAU,MAAf,UACE,6BAAKkC,KAAKX,MAAMC,SAChB,cAAC,EAAD,CAAWZ,YAAY,eACrBC,aAAcqB,KAAKjB,eAGrB,cAAC,EAAD,CAAUT,MAAO2B,W,GA3CPI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.57b73f72.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card-container\" key={props.star.name}>\n      <img\n        alt=\"star war\"\n        src={`https://robohash.org/${props.id}?set=set2&size=180x180`}\n      />\n      <h3>{props.star.name}</h3>\n      <h4>{props.star.gender}</h4>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.stars.map((star, index) => (\n      <Card key={index} id={index} star={star} />\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nfunction SearchBox({ placeholder, handleChange }) {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport SearchBox from './components/search-box/search.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      Header: \"Hello Star War\",\n      starWars: [],\n      searchField: ''\n    };\n\n  }\n\n\n  componentDidMount() {\n    console.log(\"componentDidMount\")\n    fetch('https://swapi.dev/api/people/')\n      .then(response => response.json())\n      .then(res => this.setState({ starWars: res.results }));\n\n  }\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\")\n    console.log(this.state.starWars)\n  }\n\n  // use arrow function to bind this\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { starWars, searchField } = this.state;\n    const filteredStar = starWars.filter(star => {\n      return star.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    return (\n      <div className='App' >\n        <h1>{this.state.Header}</h1>\n        <SearchBox placeholder=\"search stars\"\n          handleChange={this.handleSearch}\n        />\n\n        <CardList stars={filteredStar} />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}